#include<iostream>
using namespace std;
#include<Windows.h>

string inventory[5];
void itemDropper();
void BattleSystem();
int PlayerHealth = 100;
int MonsterGen();

int main() {
	int room = 1;
	char input;
	while (1) {//game loop
		switch (room) {
		case 1:
			cout << "you're in room 1, you can go south" << endl;
			cin >> input;
			if (input == 's')
				room = 2;
			break;
		case 2:
			cout << "you're in room 2, you can go east or north. there is a sword on the ground" << endl;
			cin >> input;
			if (input == 'e')
				room = 3;
			if (input == 's') {
				cout << "you got a sword" << endl;
				inventory[0] = "sword";
				if (input == 'n')
					room = 1;
				break;

		case 3:
			cout << "you're in room 3, you can go east or west" << endl;
			cin >> input;
			if (input == 'e')
				room = 4;
			else if (input == 'w')
				room = 2;
			break;
		case 4:
			cout << "you're in room 4, you can go south or west" << endl;
			cin >> input;
			if (input == 's')
				room = 5;
			else if (input == 'w')
				room = 3;
			break;
		case 5:
			cout << "you're in room 5, you can go west or north" << endl;
			cin >> input;
			if (input == 'w')
				room = 6;
			else if (input == 'n')
				room = 4;
			break;
		case 6:
			cout << "you're in room 6, you can go south or east" << endl;
			cin >> input;
			if (input == 's')
				room = 7;
			else if (input == 'e')
				room = 5;
			break;
		case 7:
			cout << "you're in room 7, you can go west or north" << endl;
			cin >> input;
			if (input == 'w')
				room = 8;
			else if (input == 'n')
				room = 6;
			break;
		case 8:
			cout << "you're in room 8, you can go south or east" << endl;
			cin >> input;
			if (input == 's')
				room = 9;
			else if (input == 'e')
				room = 7;
			break;
		case 9:
			cout << "you're in room 9, you can go west or north" << endl;
			cin >> input;
			if (input == 'w')
				room = 10;
			else if (input == 'n')
				room = 8;
			break;
		case 10:
			system("color 48");
			//system("pause");
			cout << "you're in room 10, you can only go east" << endl;
			cin >> input;
			if (input == 'e')
				room = 9;

			break;
			}
		}
	}
}

// battlesystem function how you fight the monsters
void BattleSystem() {
	int MonsterType = MonsterGen();
	int MonsterHealth = 0;
	int MonsterDmg = 0;
	int PlayerDmg = 0;

	if (MonsterType == 1) {
		MonsterHealth = 30;
	}
	if (MonsterType == 2) {
		MonsterHealth = 40;
	}
	if (MonsterType == 3) {
		MonsterHealth = 20;
	}
	if (MonsterType == 4) {
		MonsterHealth = 10;
	}
	if (MonsterType == 5) {
		MonsterHealth = 35;
	}

	if (MonsterType == 1) {
		MonsterDmg = rand() % 20 + 1;
	}
	if (MonsterType == 2) {
		MonsterDmg = rand() % 25 + 1;
	}
	if (MonsterType == 3) {
		MonsterDmg = rand() % 10 + 1;
	}
	if (MonsterType == 4) {
		MonsterDmg = rand() % 5 + 1;
	}
	if (MonsterType == 5) {
		MonsterDmg = rand() % 15 + 1;
	}

	while (MonsterHealth > 0 && PlayerHealth > 0) {
		if (inventory[3] == "kitana") {
			PlayerDmg = rand() % 150 + 35;
			cout << "youre enchanted blade does more damage the monster took more damage." << endl;
		}

		if (inventory[4] == "sword") {
			PlayerDmg = rand() % 50;
			cout << "youre sword does some extra damage." << endl;
			MonsterHealth -= PlayerDmg;
		}

		if (inventory[1] == "armor") {
			MonsterDmg /= 2;
			cout << "The monster attacks you for " << MonsterDmg << " HP." << endl;
			PlayerHealth -= MonsterDmg;
		}

		//if (inventory[6] == "armor") {
			//MonsterDmg /= 2;
			//cout << "The monster attacks you for " << MonsterDmg << " HP." << endl;
			//PlayerHealth -= MonsterDmg;
		//}
		//if (inventory[5] == "potion") {
			//PlayerHealth += 5;
		//}

		cout << "monster bites you for" << MonsterDmg << "HP" << endl;
		PlayerHealth -= MonsterDmg;
		PlayerDmg = rand() % 45;
		cout << "you attack the monster for" << PlayerDmg << "HP" << endl << endl;
		MonsterHealth -= PlayerDmg;
		system("pause");
		cout << "your health is now " << PlayerHealth << ", and the monsters health is " << MonsterHealth << endl;
		system("pause");

	}
	if (MonsterHealth <= 0)
		cout << "you defeated them!" << endl;
	else
		cout << "you died :(" << endl;
}

// monster generator function generates the monsters for the battlesystem
int MonsterGen() {
	int num = rand() % 100;
	if (num < 15) {
		cout << "a skeleton spawned!" << endl;
		return 1;
	}
	else if (num < 20) {
		cout << "a shadow lurker appears!!" << endl;
		return 2;
	}
	else if (num < 50) {
		cout << "a zombie security pops out of the shadows" << endl;
		return 3;
	}
	else if (num < 75) {
		cout << "a spider pops out from the shadows" << endl;
		return 4;
	}
	else if (num < 100) {
		cout << "a big dragon flys into the room" << endl;
		return 5;
	}




}
// itemdropper function drops items to you in the room when called in a specific room
void itemDropper() {
	int num = rand() % 100;
	if (num < 35) {
		cout << "you got a shield" << endl;
		inventory[1] = "shield";
	}
	else if (num < 60) {
		cout << "you got a bow and arrow " << endl;
		cout << "(" << endl;
		cout << "\\" << endl;
		cout << " )" << endl;
		cout << "##-------- >" << endl;
		cout << " )" << endl;
		cout << " /" << endl;
		cout << "(" << endl;
		
		inventory[2] = "bow and arrow ";
	}
	else if (num < 70) {
		cout << "you got an enchanted kitana" << endl;
		cout << ".______________________________________________________|_._._._._._._._._._." << endl;
		cout << " \\_____________________________________________________|_#_#_#_#_#_#_#_#_#_|" << endl;
		cout << "                                                       l" << endl;
		inventory[3] = "kitana";
	}
	

}
